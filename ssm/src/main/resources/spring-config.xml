<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--扫描service层组件-->
    <context:component-scan base-package="com.service"/>
    <!--引入配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="pageHelper" class="com.github.pagehelper.PageHelper"/>
    <!--配置SqlSessionFactory的工厂bean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--&lt;!&ndash;设置mybatis核心映射文件的位置&ndash;&gt;
        <property name="configLocation" value="classpath:mybatis-config.xml"/>-->

        <!--配置mybatis的setting属性-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
        <!--配置映射文件的位置，使用Ant风格的路径-->
        <property name="mapperLocations" value="classpath*:com/mappers/*.xml"/>
        <!--将对应包下的所有类起默认别名-->
        <property name="typeAliasesPackage" value="com.pojo"/>
        <!--设置插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor"/>
            </array>
        </property>
    </bean>

    <!--映射扫描配置，它会通过IOC容器中的SqlSessionFactoryBean获取SqlSession，
    然后创建指定包下的所有的mapper接口的代理实现类对象，并交给IOC容器管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mappers"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="sourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启事务的注解驱动-->
    <tx:annotation-driven/>

</beans>